//////////////////////////////////////////////////////////////////////////////
//
// AnetTest highlighter (for ConTEXT editor)
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// language name

Language:               AnetTest script


//////////////////////////////////////////////////////////////////////////////
// default file filter
// note: if more than one extension is associated, eg:
// AnetTest script files (*.fws)|*.fws

Filter:                 AnetTest files (*.fws)|*.fws


//////////////////////////////////////////////////////////////////////////////
// help file which will be invokend when F1 is pressed

HelpFile:


//////////////////////////////////////////////////////////////////////////////
// language case sensitivity
//                      0  - no
//                      1  - yes

CaseSensitive:          0


//////////////////////////////////////////////////////////////////////////////
// comment type: LineComment - comment to the end of line
// BlockCommentBeg - block comment begin, it could be
// multiline
// BlockCommentEnd - block comment end

LineComment:            //
BlockCommentBeg:        /*
BlockCommentEnd:        */


//////////////////////////////////////////////////////////////////////////////
// identifier characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char

IdentifierBegChars:     a..z A..Z _%@.#
IdentifierChars:        a..z A..Z _ 0..9 ?.

//////////////////////////////////////////////////////////////////////////////
// numeric constants begin characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstBegChars:       0..9 : - a..f


//////////////////////////////////////////////////////////////////////////////
// numeric constants characters
// note: characters shouldn't be delimited, except arrays
// array of chars could be defined as from_char..to_char
// number always starts with 0..9 except when NumConstBeg
// defines other

NumConstChars:          0..9 : x.su a..f


//////////////////////////////////////////////////////////////////////////////
// escape character

EscapeChar:             \


//////////////////////////////////////////////////////////////////////////////
// keyword table
// note: delimited with spaces, lines could be wrapped
// you may divide keywords into two groups which can be
// highlighted differently

// Fwtest commands

KeyWords1:              PAUSE DROP ACCEPT ANY REP >> << ONE_PACKET RESET INC OFFSET DEFAULTS INCLUDE DEVICE EXIT PASS DEFINE MASK POS BACK CLEAR VAR NAME MES EXTENDED MI REVERS BEEP SAFETERM INTERVAL GDEF TIMEOUT QUIET CYC SYSCALL NOTDOUBLEMES RAND PRECISEWAIT TRACE EP RUN WRITE GETPAC SETPAC INSPAC DELPAC FULLMASK PRINT FILTER UNFIX CHTRACE COPYREC FASTTEST GETCH NUMRET RM ARM RANGE HELP TIMED DEFAULTTEST SETSIZE CURPOS CURSIZE GOTO GOTOB GOTORES SETPOS DECVAR BREAK RECV GEN FIRST SECOND CIEVE IFNDEF CALLRES MULVAR DIVVAR NOTCOPYREC CLEARREG SHOWREP LASTRES CURTIME PRINTL LOADVAR WRITEVAR IFDEF PLAY NEWLINEIS SENDWAITOTHER OPEN CLOSE OR ADD RESET CLEAR RETURN 

KeyWords2:              llc.dsap llc.ssap llc.cntfield snap.orgcode snap.type arp.hardtype arp.proto arp.hardsize arp.protosize arp.opcode arp.type ??? arp.srcmac arp.srcip arp.srcip1 arp.srcip2 arp.srcip3 arp.srcip4 arp.dstmac arp.dstip vlan.priority vlan.cfi vlan.id vlan.type ipx.checksum ipx.len ipx.transp ipx.pactype ipx.dstnet ipx.dsthost ipx.dstsock ipx.srcnet ipx.srchost ipx.srcsock ipx.data ip6.ver ip6.class ip6.flow ip6.len ip6.next ip6.proto ip6.hop ip6.ttl ip6.src ip6.dst icmp.type icmp.code icmp.crc icmp.unused icmp.id icmp.num icmp.data icmp.gw num ack tcp.hlen tcp.flags tf window tcp.crc urg tcp.data td tcpd fin syn rst push ak ug ece cwr srcport dstport udp.len udp.crc udp.data dstmac srcmac ethproto ip.ver ip.hlen ip.tos delay throughput reliability cost priority ip.len ip.id ip.offset ip.flags ip.ttl ip.proto ip.crc srcip srcip1 srcip2 srcip3 srcip4 dstip dstip1 dstip2 dstip3 dstip4 ospf.ver ospf.mestype ospf.paclen ospf.srcrout ospf.areaid ospf.checksum ospf.authtype ospf.authdata ospf.mask ospf.helint ospf.opt ospf.prior ospf.deadint ospf.desrouter ospf.backrout ospf.actneib1 ospf.actneib2 ospf.actneib3 ospf.actneib4 ospf.actneib5 ospf.actneib6 data

KeyWords3:              UDPcrc TCPcrc IPlen IPcrc UDPcrc UDPlen ICMPcrc IPv6len

KeyWords4:					SEND OR WAIT WAITALL IF IFR SENDWAIT RECV


//////////////////////////////////////////////////////////////////////////////
// string delimiter: StringBegChar - string begin char
// StringEndChar - string end char
// MultilineStrings - enables multiline strings, as perl
// has it

StringBegChar:          "'
StringEndChar:          "'
MultilineStrings:       1


//////////////////////////////////////////////////////////////////////////////
// use preprocessor: 0 - no
// 1 - yes
// note: if yes, '#' and statements after it will be
// highlighted with Preprocessor defined colors

UsePreprocessor:        0


//////////////////////////////////////////////////////////////////////////////
// highlight line: 0 - no
// 1 - yes
// note: if yes, current line will be highlighted

CurrLineHighlighted:    1


//////////////////////////////////////////////////////////////////////////////
// colors
// note:                first value is foreground, second is background color
//                        and third (optional) represents font attribute:
//                        B - bold
//                        I - italic
//                        U - underline
//                        S - strike out
//                        attributes can be combined: eg. B or BI
//                      as value, it could be used any standard windows color:
//                        clBlack, clMaroon, clGreen, clOlive, clNavy,
//                        clPurple, clTeal, clGray, clSilver, clRed, clLime,
//                        clYellow, clBlue, clFuchsia, clAqua, clLtGray,
//                        clDkGray, clWhite, clScrollBar, clBackground,
//                        clActiveCaption, clInactiveCaption, clMenu, clWindow,
//                        clWindowFrame, clMenuText, clWindowText, clCaptionText,
//                        clActiveBorder, clInactiveBorder, clAppWorkSpace,
//                        clHighlight, clHighlightText, clBtnFace, clBtnShadow,
//                        clGrayText, clBtnText, clInactiveCaptionText,
//                        clBtnHighlight, cl3DDkShadow, cl3DLight, clInfoText,
//                        clInfoBk
//                      as value, it could be used hex numeric constant too:
//                        $BBGGRR - BB: blue, GG: green, RR: red, eg: $FF6A00

SpaceCol:               clWindowText $008CCD4B
Keyword1Col:            $0040FFFF $008CCD4B B
Keyword2Col:            $0080FFFF $008CCD4B B
Keyword3Col:            clTeal $008CCD4B B
IdentifierCol:          $00606060 $008CCD4B B
CommentCol:             clGray $008CCD4B BI
NumberCol:              clGreen $008CCD4B B
StringCol:              $00FF4040 $008CCD4B B
SymbolCol:              $0080FFFF $008CCD4B B
PreprocessorCol:        clPurple $00D0D0D0 B
SelectionCol:           clWhite $00D0D0D0
CurrentLineCol:         clBlack $00D0D0D0



OverrideTxtFgColor:     1
BlockAutoindent:        1
BlockBegStr:            {
BlockEndStr:            }
Keyword4Col:            clWhite $008CCD4B BI
Keyword5Col:            clWindowText $00D0D0D0 B
MatchedBracesCol:       clWindowText $00D0D0D0
